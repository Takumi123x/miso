tset=/data/tbm-set

Absurd_point(){
imit=170
TPUT  7 $imit; $e "|";TPUT  8 $imit; $e "|";TPUT  9 $imit; $e "|";TPUT 10 $imit; $e "|";TPUT 11 $imit; $e "|";TPUT 12 $imit; $e "|";
TPUT 13 $imit; $e "|";TPUT 14 $imit; $e "|";TPUT 15 $imit; $e "|";TPUT 16 $imit; $e "|";TPUT 17 $imit; $e "|";TPUT 18 $imit; $e "|";
TPUT 19 $imit; $e "|";TPUT 20 $imit; $e "|";TPUT 21 $imit; $e "|";TPUT 22 $imit; $e "|";TPUT 23 $imit; $e "|";TPUT 24 $imit; $e "|";
TPUT 25 $imit; $e "|";TPUT 26 $imit; $e "|";TPUT 27 $imit; $e "|";TPUT 28 $imit; $e "|";TPUT 29 $imit; $e "|";TPUT 30 $imit; $e "|";
TPUT 31 $imit; $e "|";TPUT 32 $imit; $e "|";TPUT 33 $imit; $e "|";TPUT 34 $imit; $e "|";TPUT 35 $imit; $e "|";TPUT 36 $imit; $e "|";
TPUT 37 $imit; $e "|";TPUT 38 $imit; $e "|";TPUT 39 $imit; $e "|";
}

FCD(){
FakeOP=Absurd_point
$FakeOP
}

Fullscreen_force(){
TPUT 1 1; $E " "
}

ff=Fullscreen_force

About_case(){
Absurd_point;

MARK;TPUT 47 45
           printf "ENTER - Select64,NEXT                                                                  ";UNMARK
}

MARK(){ $e "\e[7m\e[3$(( $RANDOM * 6 / 32767 + 1 ))m";}
UNMARK(){ $e "\e[27m";}

Case_universal="
	__________________________________________________________________________________________________________________________________________________________________
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	|	|
	||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||"

ARM-SW(){
HDDefault(){
busybox rm -rf /system/Select64
ln -s /system/Arm/Arm-default/lib64 /system/Select64
echo "Current : Default" > /system/xbin/asm64
busybox chmod +x /system/xbin/asm64
am startservice -e int_id 1 -e str_title "TakuruKagami": -e str_content "Arm set to: Default" -e float_tsize 12 -e float_csize 20 -n com.hal9k.notify4scripts/.NotifyServiceCV
clear
}
HD600(){
busybox rm -rf /system/Select64
ln -s /system/Arm/Arm-600/lib64 /system/Select64
echo "Current : 6.0.0" > /system/xbin/asm64
busybox chmod +x /system/xbin/asm64
am startservice -e int_id 1 -e str_title "TakuruKagami": -e str_content "Arm set to: 6.0.0" -e float_tsize 12 -e float_csize 20 -n com.hal9k.notify4scripts/.NotifyServiceCV
clear
}
HD612(){
busybox rm -rf /system/Select64
ln -s /system/Arm/Arm-612/lib64 /system/Select64
echo "Current : 6.1.2" > /system/xbin/asm64
busybox chmod +x /system/xbin/asm64
am startservice -e int_id 1 -e str_title "TakuruKagami": -e str_content "Arm set to: 6.1.2" -e float_tsize 12 -e float_csize 20 -n com.hal9k.notify4scripts/.NotifyServiceCV
clear
}

#Device info
clear
      E='echo -e';e='echo -en';trap "R;exit" 2
    ESC=$( $e "\e")
   TPUT(){ $e "\e[${1};${2}H";}
  CLEAR(){ $e "\ec";}
  CIVIS(){ $e "\e[?25l";}
   DRAW(){ $e "\e%@\e(0";}
  WRITE(){ $e "\e(B";}
      R(){ CLEAR ;stty sane;$e "\ec\e[37;00m\e[J";};
   HEAD(){ DRAW
           for each in $(seq 45 25);do
           $E "   x                                          x"
           done
           WRITE;MARK;TPUT 1 45
           $E " ARM SUPPORT MODULE BY TAKURUKAGAMI                                                    ";UNMARK;}
           i=0; CLEAR; CIVIS;NULL=/dev/null
   FOOT(){ MARK;TPUT 47 45
           printf "ENTER - Select,NEXT                                                                  ";$ff;}
   FOOT2(){ UNMARK;TPUT 5 45
   printf "$set_info";MARK;TPUT 8 18; $e "                       ";TPUT 8 18; $e "$(</system/xbin/asm64)";UNMARK;$ff;}
  ARROW(){ read -s -n3 key 2>/dev/null >&2
           if [[ $key = $ESC[A ]];then echo up;fi
           if [[ $key = $ESC[B ]];then echo dn;fi;}
     M0(){ TPUT 10 18; $e "ASM DEFAULT            ";$ff;}
     M1(){ TPUT 12 18; $e "ASM 6.0.0              ";$ff;}
     M2(){ TPUT 14 18; $e "ASM 6.1.2              ";$ff;}
     M3(){ TPUT 16 18; $e "EXIT                   ";$ff;}
      LM=3
   MENU(){ for each in $(seq 0 $LM);do M${each};done;}
    POS(){ if [[ $cur == up ]];then ((i--));fi
           if [[ $cur == dn ]];then ((i++));fi
           if [[ $i -lt 0   ]];then i=$LM;fi
           if [[ $i -gt $LM ]];then i=0;fi;}
REFRESH(){ after=$((i+1)); before=$((i-1))
           if [[ $before -lt 0  ]];then before=$LM;fi
           if [[ $after -gt $LM ]];then after=0;fi
           if [[ $j -lt $i      ]];then UNMARK;M$before;else UNMARK;M$after;fi
           if [[ $after -eq 0 ]] || [ $before -eq $LM ];then
           UNMARK; M$before; M$after;fi;j=$i;UNMARK;M$before;M$after;}
   INIT(){ clear;set_info=$Case_universal;R;HEAD;FOOT2;FOOT;$FakeOP;UNMARK;About_case;Absurd_point;MENU;}
     SC(){ REFRESH;MARK;$S;$b;cur=`ARROW`;}
   ES(){ MARK;$e "ENTER = main menu ";$b;read;INIT;};INIT
  while [[ "$O" != " " ]]; do case $i in
        0) S=M0;SC;if [[ $cur == "" ]];then R;clear;HDDefault;INIT;fi;;
        1) S=M1;SC;if [[ $cur == "" ]];then R;clear;HD600;INIT;fi;;
        2) S=M2;SC;if [[ $cur == "" ]];then R;clear;HD612;INIT;fi;;
        3) S=M3;SC;if [[ $cur == "" ]];then R;clear;exit;fi;;
 esac;POS;done
}


if [ "$(id -u)" != "0" ]; then
echo "This script must be run as root" 1>&2
read t -2
clear
else
ARM-SW
fi

